version: '3.9'

services:
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    container_name: tg_bot_postgres
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bot_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    container_name: tg_bot_redis
    restart: always
    env_file: .env
    command: redis-server --requirepass '${REDIS_PASSWORD}'
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - bot_network
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', '$REDIS_PASSWORD', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
  bot:
    image: tg_bot_app
    container_name: tg_bot_app
    restart: always
    env_file:
      - .env
    environment:
      BOT_TOKEN: ${TOKEN}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      USE_SSH: ${USE_SSH}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bot_network
    volumes:
      - ./bot/src:/app/src

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: always
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./bot/loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - bot_network

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: always
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./bot/promtail-config.yaml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - bot_network
    privileged: true

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=skywalker
      - GF_SECURITY_ADMIN_PASSWORD=skywalker
    volumes:
      - grafana_data:/var/lib/grafana
      - ./bot/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    networks:
      - bot_network

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  bot_network:
    driver: bridge
